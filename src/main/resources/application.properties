spring.application.name=AWSServiceRepo

s# Spring OAuth2 Configuration for Cognito
# Replace the placeholder values with your actual AWS Cognito credentials

spring.security.oauth2.client.registration.cognito.clientId=<your-cognito-client-id>
spring.security.oauth2.client.registration.cognito.client-secret=<your-cognito-client-secret>
spring.security.oauth2.client.provider.cognito.issuerUri=https://cognito-idp.${aws.cognito.region}.amazonaws.com/${aws.cognito.userPoolId}
spring.security.oauth2.client.registration.cognito.redirect-uri=http://localhost:8080/login/oauth2/code/cognito
spring.security.oauth2.client.registration.cognito.scope=openid
spring.security.oauth2.client.registration.cognito.clientName=CognitoAppClient
spring.security.oauth2.client.registration.cognito.authorization-grant-type=authorization_code

# AWS Cognito Configuration - Replace with your actual values
aws.cognito.region=us-east-1  # e.g., us-east-1
aws.cognito.userPoolId=<your-user-pool-id>  # e.g., us-east-1_LZb1p4IkW
aws.cognito.identityPoolId=<your-identity-pool-id>  # e.g., us-east-1:8c4df49f-720e-43ac-831b-7a16f368428d
aws.cognito.userPoolDomain=<your-user-pool-domain>  # e.g., us-east-1lzb1p4ikw.auth.us-east-1.amazoncognito.com
aws.cognito.logoutUrl=https://${aws.cognito.userPoolDomain}/logout
aws.cognito.logout.success.redirectUrl=https://${aws.cognito.userPoolDomain}/
aws.cognito.loginUrl=https://${aws.cognito.userPoolDomain}/login?client_id=${spring.security.oauth2.client.registration.cognito.clientId}&response_type=code&scope=email+openid+phone&redirect_uri=${spring.security.oauth2.client.registration.cognito.redirect-uri}

# Instructions:
# 1. Replace <your-cognito-client-id> and <your-cognito-client-secret> with your own Cognito App Client credentials.
# 2. Replace <your-user-pool-id> and <your-identity-pool-id> with your own Cognito User Pool and Identity Pool IDs.
# 3. Ensure that the AWS region matches where your Cognito resources are hosted.


